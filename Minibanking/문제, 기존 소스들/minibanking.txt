#include <iostream>
#include <string>

using namespace std;

const int NAME_LEN = 50;	// 이름 문자열

// 1. 전체 출력 시 이름이 앞 글자 하나만 나오는 것
// 2. 입출금 금액 계산이 안되고 있음 => 해결

class ACCOUNT
{
private:
	int accID;		// 계좌번호
	int balance;	// 잔액
	char * cusName; // 고객 이름

public:      
	ACCOUNT(const int ID, const int money, const char * myname) // 생성자
		: accID(ID), balance(money)
	{
		int len = strlen(myname) + 1;
		cusName = new char[len];	// new 로 char 배열 생성
		strcpy(cusName, myname);
	}

	int getaccID()
	{
		return accID;
	}

	int getbalance()
	{
		return balance;
	}

	void setplusbalance(int money) // 얘는 값이 바뀌는거라서?
	{							   // 굳이 int 형과 return을 해주지 않아도
		balance += money;		   // 된대...
	}

	void setminusbalance(int money) // 얘는 값이 바뀌는거라서?
	{								// 굳이 int 형과 return을 해주지 않아도
		balance -= money;			// 된대...
	}

	char * getcusName() // 근데 여기다가 *를 찍으면, cusName의 '\0'을
						// 만족할 때까지를 불러오니까 abcdef를 다 출력함!
	{					// (이런 설명이었던것 같음...)
		return cusName;
	}

	/*
		char getcusName()
	{
		return * cusName; -> 이거는 cusName 배열의 포인터라서
							 cusName이 만약에 abcdef라면
							 배열의 포인터는 그 배열의 첫 문자이므로
							 * cusName이라고 하면 a 한 글자만 출력이 된다
	}
	*/

	~ACCOUNT() // 소멸자
	{
		delete[]cusName;
	}
};

ACCOUNT * accArr[100];		// 계좌를 관리할 배열 ☆클래스 밑에☆
int accNum = 0;				// 개설된 계좌 수

enum { MAKE = 1, DEPOSIT, WITHDRAW, INQUIRE, EXIT };	// 메뉴용 열거자 
void ShowMenu(void);									// 메뉴 출력

void MakeAccount(void);									// 계좌 개설 
void DepositMoney(void);								// 입금
void WithdrawMoney(void);								// 출금
void ShowAllAccInfo(void);								// 잔액조회

int main(void)
{
	int choice;
	
	while (1)
	{
		ShowMenu();
		cout << "메뉴 선택 : ";
		cin >> choice;
		cout << endl;

		switch (choice)
		{
		case MAKE:
			MakeAccount();
			break;
		case DEPOSIT:
			DepositMoney();
			break;
		case WITHDRAW:
			WithdrawMoney();
			break;
		case INQUIRE:
			ShowAllAccInfo();
			break;
		case EXIT:
			return 0;// while에 0을 넣어서 반복을 멈추는것 => 끝냄 
			// exit(0);
			// return;  => 이렇게 써도 된대!!@!
		default:
			cout << "※ 없는 메뉴입니다. 다시 선택해주세요. ※" << endl << endl;
		}
	}

	for (int i = 0; i < accNum; i++) // 소멸자
	{
		delete accArr[i];
	}
	return 0;
}

void ShowMenu(void)
{
	system("cls");

	cout << "============ Menu ============" << endl;
	cout << "	 1. 계좌개설" << endl;
	cout << "	 2. 입    금" << endl;
	cout << "	 3. 출    금" << endl;
	cout << "	 4. 전체출력" << endl;
	cout << "	 5. 종    료" << endl;
	cout << "==============================" << endl;
}

void MakeAccount(void)	// 계좌 개설. 1개만 => 반복x
{
	system("cls");

	int id;					// 계좌 번호
	char name[NAME_LEN];	// 고객 명
	int balance;			// 잔액

	cout << "========== 계좌개설 ==========" << endl;
	
	cout << "계좌번호 : "; cin >> id;
	cout << "고객명   : "; cin >> name;
	cout << "잔액     : "; cin >> balance;
	cout << "==============================" << endl;
	accArr[accNum++] = new ACCOUNT (id, balance, name);
	cout << "☞ 계좌가 생성되었습니다. ☜" << endl;
	cout << "==============================" << endl;
	getchar();
	getchar();
}

void DepositMoney(void)	// 입금
{
	system("cls");

	int money; // 입금액
	int id;    // 계좌번호

	cout << "=========== 입  금 ===========" << endl;
	cout << "계좌번호 : "; cin >> id;
	cout << "입금액   : "; cin >> money;
	cout << "==============================" << endl;
	
	for (int i = 0; i < accNum; i++)
	{
		if (accArr[i]->getaccID() == id)
		{
			accArr[i]->setplusbalance(money);
			cout << "	♬ 입금 완료 ♬" << endl;
			cout << "==============================" << endl;
			getchar();
			getchar();

			return;

			if (!(accArr[i]->getaccID() == id))
			{
				cout << "※ 없는 계좌번호입니다. ※" << endl;
				cout << "==============================" << endl;
				getchar();
				getchar();

				return;
			}
		}	
	}
}

void WithdrawMoney(void)
{
	system("cls");

	int money;  // 출금액
	int id;		// 계좌번호

	cout << "=========== 출  금 ===========" << endl;
	cout << "계좌번호 : "; cin >> id;
	cout << "출금액   : "; cin >> money;
	cout << "==============================" << endl;

	for (int i = 0; i < accNum; i++)
	{
		if (accArr[i]->getaccID() == id)
		{
			if (accArr[i]->getbalance() < money)
			{
				cout << "※ 잔액이 부족합니다. ※" << endl;
				cout << "==============================" << endl;
				getchar();
				getchar();

				return;
			}

			if (!(accArr[i]->getaccID() == id))
			{
				cout << "※ 없는 계좌번호입니다. ※" << endl;
				cout << "==============================" << endl;
				getchar();
				getchar();

				return;
			}

			accArr[i]->setminusbalance(money);
			cout << "	♬ 출금 완료 ♬" << endl;
			cout << "==============================" << endl;
			getchar();
			getchar();

			return;
		}
	}
}

void ShowAllAccInfo(void)
{
	system("cls");
	
	for (int i = 0; i < accNum; i++)
	{
		cout << "==============================" << endl;
		cout << "[ " << i + 1 << "번째 고객 정보 ]" << endl;
		cout << "계좌번호 : " << accArr[i]->getaccID() << endl;
		cout << "고 객 명 : " << accArr[i]->getcusName() << endl;
		cout << "잔    액 : " << accArr[i]->getbalance() << endl;
		cout << "==============================" << endl;
		cout << endl;
	}

	getchar();
	getchar();
}
